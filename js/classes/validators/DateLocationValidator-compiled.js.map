{"version":3,"sources":["DateLocationValidator.js"],"names":[],"mappings":";;;;;;;;;IAGM,qBAAqB;AAEZ,aAFT,qBAAqB,CAEX,YAAY,EAAC;8BAFvB,qBAAqB;;AAGnB,YAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AAClC,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACnC;;iBALC,qBAAqB;;eAOf,kBAAC,oBAAoB,EAC7B;AACI,mBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;AAE1B,gBAAG,IAAI,CAAC,aAAa,IAAE,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAE,CAAC,EAAE;AACzD,uBAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AACjC,uBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAChC,uBAAO;AACH,2BAAO,EAAC,IAAI;AACZ,0BAAM,EAAC,EAAE;AACT,8BAAU,EAAC,CAAC;iBACf,CAAC;aACL,MAAI;;AAED,uBAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,oBAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,UAAS,WAAW,EAC1D;AACI,2BAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,wBAAG,WAAW,CAAC,SAAS,IAAE,oBAAoB,CAAC,SAAS,IAAI,WAAW,CAAC,SAAS,IAAE,oBAAoB,CAAC,SAAS,EAAC;AAC9G,+BAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,+BAAO,IAAI,CAAC;qBACf;iBACJ,CAAC,CAAC;;AAEH,oBAAG,MAAM,CAAC,MAAM,GAAC,CAAC,EAAC;AACf,2BAAO;AACC,+BAAO,EAAC,IAAI;AACZ,8BAAM,EAAC,0EAA0E;AACjF,kCAAU,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;qBAC9B,CAAC;iBACL;aACJ;SACJ;;;WAvCC,qBAAqB","file":"DateLocationValidator-compiled.js","sourcesContent":["/**\r\n * Created by matthewo on 12/08/2015.\r\n */\r\nclass DateLocationValidator{\r\n    _appointments;\r\n    constructor(appointments){\r\n        this._appointments = appointments;\r\n        console.log(this._appointments);\r\n    }\r\n\r\n    validate(appointmentViewModel)\r\n    {\r\n        console.log('validating');\r\n\r\n        if(this._appointments==null || this._appointments.length==0) {\r\n            console.log('appointments null');\r\n            console.log(this._appointments);\r\n            return {\r\n                outcome:true,\r\n                reason:'',\r\n                conflictId:0\r\n            };\r\n        }else{\r\n\r\n            console.log('appointments not null');\r\n            var result = this._appointments.where(function(appointment)\r\n            {\r\n                console.log('searching');\r\n                if(appointment.startDate==appointmentViewModel.startDate && appointment.startDate==appointmentViewModel.startDate){\r\n                    console.log('found');\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            if(result.length>0){\r\n                return {\r\n                        outcome:true,\r\n                        reason:'There is already an appointment scheduled for this location on this date',\r\n                        conflictId:result[0].id\r\n                };\r\n            }\r\n        }\r\n    }\r\n}"]}