{"version":3,"sources":["CalendarBuilder.js"],"names":[],"mappings":";;;;;;;;IAEM,eAAe;AACJ,aADX,eAAe,CACH,cAAc,EAAE,IAAI,EAAE;;;8BADlC,eAAe;;AAEZ,YAAI;AACA,gBAAI,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;AAClE,gBAAI,CAAC,wBAAwB,GAAG,IAAI,KAAK,EAAE,CAAC;;AAE5C,gBAAG,cAAc,KAAG,IAAI,EAAE;AACtB,8BAAc,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK,EAAI;AACtC,0BAAK,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;iBAC7D,CAAC,CAAC;aACN;;AAED,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;AAElB,gBAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,gBAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AACnB,oBAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aAC3B;SACJ,CACA,OAAM,SAAS,EAAC;AACZ,mBAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;AACtB,kBAAM,SAAS,CAAC;SACnB;KAEN;;;;;;iBAzBC,eAAe;;eA2BJ,yBAAE;;;AACX,gBAAI;;AACA,wBAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;AAC3B,2BAAK,UAAU,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK,EAAI;AACvC,gCAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,6BAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE;AAC/B,gCAAI,YAAY,GAAG,IAAI,IAAI,CAAC,OAAK,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAClD,gCAAI,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;AAClD,oCAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;;AAEtC,gCAAI,OAAK,wBAAwB,CAAC,MAAM,GAAG,CAAC,EAC5C;AACG,oCAAI,YAAY,GAAG,OAAK,wBAAwB,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AAChE,wCAAI,kBAAkB,GAAG,YAAY,CAAC,cAAc,EAAE,CAAC;AACvD,wCAAG,CAAC,KAAK,kBAAkB,EAC3B;AACI,oDAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACpC,+CAAO,IAAI,CAAC;qCACf;AACD,2CAAO,KAAK,CAAC;iCACf,CAAC,CAAC;6BACN;yBAEJ;qBACJ,CAAC,CAAC;AACH;2BAAO,QAAQ;sBAAC;;;;aACnB,CAAA,OAAM,KAAK,EAAC;AACT,uBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,sBAAM,KAAK,CAAC;aACf;SACJ;;;WAzDC,eAAe","file":"CalendarBuilder-compiled.js","sourcesContent":["//import Date from \"../extensions/Date.js\";\r\n\r\nclass CalendarBuilder{\r\n      constructor(publicHolidays, year) {\r\n         try {\r\n             this._monthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\r\n             this._publicHolidaysAsStrings = new Array();\r\n\r\n             if(publicHolidays!==null) {\r\n                 publicHolidays.forEach((element, index)=> {\r\n                     this._publicHolidaysAsStrings.push(element.publicHoliday);\r\n                 });\r\n             }\r\n\r\n             this._year = year;\r\n\r\n             var year = new Date(this._year, 0, 1);\r\n\r\n             if (year.isLeapYear()) {\r\n                 this._monthDays[1] = 29;\r\n             }\r\n         }\r\n          catch(exception){\r\n              console.log(exception)\r\n              throw exception;\r\n          }\r\n\r\n    }\r\n\r\n    buildCalendar(){\r\n        try {\r\n            let calendar = new Array();\r\n            this._monthDays.forEach((element, index)=> {\r\n                calendar[index] = new Array();\r\n                for (var i = 1; i <= element; i++) {\r\n                    var calendarDate = new Date(this._year, index, i);\r\n                    var dayViewModel = new DayViewModel(calendarDate);\r\n                    calendar[index][i - 1] = dayViewModel;\r\n\r\n                    if (this._publicHolidaysAsStrings.length > 0)\r\n                    {\r\n                       var matchedDates = this._publicHolidaysAsStrings.where(function (x) {\r\n                           var dateAsPrettyFormat = calendarDate.formatMMDDYYYY();\r\n                           if(x === dateAsPrettyFormat)\r\n                           {\r\n                               dayViewModel.setPublicHoliday(true);\r\n                               return true;\r\n                           }\r\n                           return false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n            });\r\n            return calendar;\r\n        }catch(excep){\r\n            console.log(excep);\r\n            throw excep;\r\n        }\r\n    }\r\n\r\n\r\n}/**\r\n * Created by Matt on 11/08/2015.\r\n */\r\n"]}