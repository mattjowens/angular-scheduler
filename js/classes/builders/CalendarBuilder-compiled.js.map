{"version":3,"sources":["CalendarBuilder.js"],"names":[],"mappings":";;;;;;;;IAEM,eAAe;AACJ,aADX,eAAe,CACH,cAAc,EAAE,IAAI,EAAE;;;8BADlC,eAAe;;AAEZ,YAAI;AACA,gBAAI,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;AAClE,gBAAI,CAAC,wBAAwB,GAAG,IAAI,KAAK,EAAE,CAAC;;AAE5C,gBAAG,cAAc,KAAG,IAAI,EAAE;AACtB,8BAAc,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,KAAK,EAAI;AACtC,0BAAK,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;iBAC7D,CAAC,CAAC;aACN;;AAED,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;AAElB,gBAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,gBAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AACnB,oBAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aAC3B;SACJ,CACA,OAAM,SAAS,EAAC;AACZ,mBAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;AACtB,kBAAM,SAAS,CAAC;SACnB;KAEN;;;;;;iBAzBC,eAAe;;eA2BJ,yBAAE;;;AACX,gBAAI,QAAQ,GAAC,IAAI,KAAK,EAAE,CAAC;AACzB,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,OAAO,EAAC,KAAK,EAAG;AACrC,wBAAQ,CAAC,KAAK,CAAC,GAAC,IAAI,KAAK,EAAE,CAAC;AAC5B,qBAAI,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAG,OAAO,EAAC,CAAC,EAAE,EAAC;AAC3B,wBAAI,YAAY,GAAG,IAAI,IAAI,CAAC,OAAK,KAAK,EAAC,KAAK,GAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACjD,wBAAI,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;AAClD,4BAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,YAAY,CAAC;;AAEhC,wBAAG,OAAK,wBAAwB,CAAC,MAAM,GAAC,CAAC,EAAE;AACvC,4BAAI,YAAY,GAAG,OAAK,wBAAwB,CAAC,KAAK,CAAC,UAAS,CAAC,EAAC;AAC9D,mCAAO,CAAC,KAAG,YAAY,CAAC,cAAc,EAAE,CAAC;yBAC5C,CAAC,CAAC;;AAEH,4BAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AACzB,wCAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;yBACvC;qBACJ;iBAEJ;aACJ,CAAC,CAAC;AACF,mBAAO,QAAQ,CAAC;SACpB;;;WAjDC,eAAe","file":"CalendarBuilder-compiled.js","sourcesContent":["//import Date from \"../extensions/Date.js\";\r\n\r\nclass CalendarBuilder{\r\n      constructor(publicHolidays, year) {\r\n         try {\r\n             this._monthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\r\n             this._publicHolidaysAsStrings = new Array();\r\n\r\n             if(publicHolidays!==null) {\r\n                 publicHolidays.forEach((element, index)=> {\r\n                     this._publicHolidaysAsStrings.push(element.publicHoliday);\r\n                 });\r\n             }\r\n\r\n             this._year = year;\r\n\r\n             var year = new Date(this._year, 0, 1);\r\n\r\n             if (year.isLeapYear()) {\r\n                 this._monthDays[1] = 29;\r\n             }\r\n         }\r\n          catch(exception){\r\n              console.log(exception)\r\n              throw exception;\r\n          }\r\n\r\n    }\r\n\r\n    buildCalendar(){\r\n        let calendar=new Array();\r\n        this._monthDays.forEach((element,index)=>{\r\n            calendar[index]=new Array();\r\n            for(var i =0; i < element;i++){\r\n               var calendarDate = new Date(this._year,index-1,i);\r\n                var dayViewModel = new DayViewModel(calendarDate);\r\n                calendar[index][i]=dayViewModel;\r\n\r\n                if(this._publicHolidaysAsStrings.length>0) {\r\n                    var matchedDates = this._publicHolidaysAsStrings.where(function(x){\r\n                        return x===calendarDate.formatMMDDYYYY();\r\n                    });\r\n\r\n                    if (matchedDates.length > 0) {\r\n                        dayViewModel.setPublicHoliday(true);\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n         return calendar;\r\n    }\r\n\r\n\r\n}/**\r\n * Created by Matt on 11/08/2015.\r\n */\r\n"]}