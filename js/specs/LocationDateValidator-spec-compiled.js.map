{"version":3,"sources":["LocationDateValidator-spec.js"],"names":[],"mappings":"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","file":"LocationDateValidator-spec-compiled.js","sourcesContent":["describe(\"LocationDateValidator\", function()\n{\n    it(\"Passes when null appointment array is passed\",function(){\n        let validator  = new LocationDateValidator(null);\n        let result = new validator.validate(new AppointmentViewModel());\n        expect(result.outcome).toBe(true);\n    });\n\n    it(\"Passes when null appointment array is length 0\",function(){\n        let validator  = new LocationDateValidator([]);\n        let result = new validator.validate(new AppointmentViewModel());\n        expect(result.outcome).toBe(true);\n    });\n\n    describe('When the location is not the same location',function() {\n\n        it(\"Passes when appointment clashes exactly\", function () {\n            try {\n                let appointments = [new AppointmentViewModel(1, new Date(2015, 1, 1), new Date(2015, 1, 2))];\n                let validator = new LocationDateValidator(appointments);\n                let appointmentViewmodel = new AppointmentViewModel(1, new Date(2015, 1, 1), new Date(2015, 1, 2));\n                let result = validator.validate(appointmentViewmodel);\n                expect(result.outcome).toBe(true);\n            }\n            catch (excep) {\n                console.log(excep)\n                expect(true).toBe(false);\n            }\n        });\n\n        it(\"Passes when appointment clashes exactly- with time, for same location\", function () {\n            try {\n                let appointments = [new AppointmentViewModel(1, new Date(2015, 1, 1, 8, 30, 0), new Date(2015, 1, 2, 17, 30, 0))];\n                let validator = new LocationDateValidator(appointments);\n                let appointmentViewmodel = new AppointmentViewModel(1, new Date(2015, 1, 1, 8, 30, 0), new Date(2015, 1, 2, 17, 30, 0));\n                let result = validator.validate(appointmentViewmodel);\n                expect(result.outcome).toBe(true);\n            }\n            catch (excep) {\n                console.log(excep)\n                expect(true).toBe(false);\n            }\n        });\n\n\n        it(\"Passes when appointment falls within existing - both bounds, for same location\", function () {\n            try {\n                let appointments = [new AppointmentViewModel(1, new Date(2015, 1, 1, 8, 30, 0), new Date(2015, 1, 2, 17, 30, 0))];\n                let validator = new LocationDateValidator(appointments);\n                let appointmentViewmodel = new AppointmentViewModel(1, new Date(2015, 1, 1, 9, 30, 0), new Date(2015, 1, 2, 16, 30, 0));\n                let result = validator.validate(appointmentViewmodel);\n                expect(result.outcome).toBe(true);\n            }\n            catch (excep) {\n                console.log(excep)\n                expect(true).toBe(false);\n            }\n        });\n    });\n\n\n    describe('When the location is the same location',function() {\n        it(\"Fails when appointment clashes exactly\", function () {\n            try {\n                let appointments = [new AppointmentViewModel(1, new Date(2015, 1, 1), new Date(2015, 1, 2))];\n                let validator = new LocationDateValidator(appointments);\n                let appointmentViewmodel = new AppointmentViewModel(1, new Date(2015, 1, 1), new Date(2015, 1, 2));\n                let result = validator.validate(appointmentViewmodel);\n                expect(result.outcome).toBe(false);\n            }\n            catch (excep) {\n                console.log(excep)\n                expect(true).toBe(false);\n            }\n        });\n\n        it(\"Fails when appointment clashes exactly- with time, for same location\", function () {\n            try {\n                let appointments = [new AppointmentViewModel(1, new Date(2015, 1, 1, 8, 30, 0), new Date(2015, 1, 2, 17, 30, 0))];\n                let validator = new LocationDateValidator(appointments);\n                let appointmentViewmodel = new AppointmentViewModel(1, new Date(2015, 1, 1, 8, 30, 0), new Date(2015, 1, 2, 17, 30, 0));\n                let result = validator.validate(appointmentViewmodel);\n                expect(result.outcome).toBe(false);\n            }\n            catch (excep) {\n                console.log(excep)\n                expect(true).toBe(false);\n            }\n        });\n\n\n        it(\"Fails when appointment falls within existing - both bounds, for same location\", function () {\n            try {\n                let appointments = [new AppointmentViewModel(1, new Date(2015, 1, 1, 8, 30, 0), new Date(2015, 1, 2, 17, 30, 0))];\n                let validator = new LocationDateValidator(appointments);\n                let appointmentViewmodel = new AppointmentViewModel(1, new Date(2015, 1, 1, 9, 30, 0), new Date(2015, 1, 2, 16, 30, 0));\n                let result = validator.validate(appointmentViewmodel);\n                expect(result.outcome).toBe(false);\n            }\n            catch (excep) {\n                console.log(excep)\n                expect(true).toBe(false);\n            }\n        });\n    });\n\n});\n"]}